# Generated by Django 4.1 on 2024-02-03 14:41

import core.models.defaults
import core.models.validators.medical_record
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(blank=True, max_length=16, null=True, unique=True, verbose_name='Username')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='Email Address')),
                ('phone_no', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='Phone Number')),
                ('user_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='User ID')),
                ('gender', models.CharField(blank=True, choices=[('F', 'Female'), ('M', 'Male'), ('NB', 'None Binary')], max_length=2, verbose_name='Gender')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date Joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='Last Login')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is Admin')),
                ('groups', models.ManyToManyField(blank=True, related_name='user_groups', to='auth.group')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='Hospital ID')),
                ('name', models.CharField(max_length=250)),
                ('contact', models.JSONField(blank=True, default=core.models.defaults.default_contact, null=True)),
                ('type', models.CharField(choices=[('SP', 'Specialized'), ('CL', 'Clinic'), ('GN', 'General'), ('LB', 'Laboratory')], max_length=2)),
                ('location', models.CharField(blank=True, max_length=70)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, unique=True)),
                ('system', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='RefreshToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refresh_token', models.CharField(max_length=255, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='Patient ID')),
                ('name', models.JSONField(blank=True, default=core.models.defaults.default_name)),
                ('contact', models.JSONField(blank=True, default=core.models.defaults.default_contact)),
                ('hospitals', models.ManyToManyField(blank=True, related_name='hospital', to='core.hospital')),
                ('primary_hospital', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.hospital')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('encounters', models.JSONField(blank=True, default=core.models.defaults.default_encounter, null=True, validators=[core.models.validators.medical_record.validate_encounters])),
                ('medical_history', models.JSONField(blank=True, default=core.models.defaults.default_medical_history, null=True, validators=[core.models.validators.medical_record.validate_medical_history])),
                ('allergies', models.ManyToManyField(blank=True, to='core.allergy')),
                ('patient', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='core.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, unique=True, verbose_name='User ID')),
                ('name', models.JSONField(default=core.models.defaults.default_name)),
                ('hospitals', models.ManyToManyField(blank=True, to='core.hospital')),
                ('resident_hospital', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='resident_hospital', to='core.hospital')),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.specialization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='users', to='core.role'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
